<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />
    <style>
        body {
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background-color: #f0f0f0;
            font-family: Arial, sans-serif;
        }

        #chat-container {
            width: 400px;
            max-width: 100%;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            display: flex;
            flex-direction: column;
            height: 600px;
        }

        #login-section, #chat-section {
            padding: 20px;
        }

        #login-section {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            height: 100%;
            background-color: #eee;
        }

        #login-section input {
            padding: 10px;
            margin-bottom: 10px;
            width: 80%;
            border: 1px solid #ccc;
            border-radius: 4px;
        }

        #login-section button {
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            background-color: #007bff;
            color: #fff;
            cursor: pointer;
            font-size: 16px;
        }

        #login-section button:hover {
            background-color: #0056b3;
        }

        #chat-section {
            display: none;
            flex-direction: column;
            height: calc(100% - 60px);
        }

        #messagesList {
            flex: 1;
            overflow-y: auto;
            padding: 10px;
            list-style: none;
            margin: 0;
            background-color: #f9f9f9;
        }

        #messagesList li {
            margin-bottom: 10px;
            padding: 10px;
            border-radius: 4px;
            display: flex;
            max-width: 70%;
            word-wrap: break-word;
        }

        .my-message {
            background-color: #ffffff;
            align-self: flex-end;
            margin-left: auto;
            text-align: right;
        }

        .other-message {
            background-color: #e1ffc7;
            align-self: flex-start;
            text-align: left;
        }

        #messageInput {
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            width: calc(100% - 60px);
            margin: 0;
            box-sizing: border-box;
        }

        #sendButton {
            padding: 10px;
            border: none;
            border-radius: 4px;
            background-color: #007bff;
            color: #fff;
            cursor: pointer;
            font-size: 16px;
            margin-left: 10px;
        }

        #sendButton:hover {
            background-color: #0056b3;
        }
    </style>
</head>
<body>
    <div id="chat-container">
        <div id="login-section">
            <h2>Giriş Yap</h2>
            <input type="text" id="userInput" placeholder="Kullanıcı Adı" />
            <button id="loginButton">Giriş Yap</button>
        </div>
        <div id="chat-section">
            <ul id="messagesList"></ul>
            <div style="display: flex; align-items: center; padding: 10px;">
                <input type="text" id="messageInput" placeholder="Mesajınızı yazın..." />
                <button id="sendButton">Gönder</button>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.min.js"></script>
    <script type="text/javascript">
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chatHub")
            .build();

        connection.on("ReceiveMessage", (user, message) => {
            const currentUser = localStorage.getItem('currentUser');
            const li = document.createElement("li");
            li.textContent = `${user}: ${message}`;
            li.className = user === currentUser ? 'my-message' : 'other-message';
            document.getElementById("messagesList").appendChild(li);
        });

        connection.start().catch(err => console.error(err.toString()));

        document.getElementById("loginButton").addEventListener("click", () => {
            const user = document.getElementById("userInput").value;
            if (user) {
                document.getElementById("login-section").style.display = 'none';
                document.getElementById("chat-section").style.display = 'flex';
                localStorage.setItem('currentUser', user);

                fetch('/api/chat/messages')
                    .then(response => response.json())
                    .then(messages => {
                        messages.forEach(msg => {
                            const li = document.createElement("li");
                            li.textContent = `${msg.userName}: ${msg.messageContent}`;
                            li.className = msg.userName === user ? 'my-message' : 'other-message';
                            document.getElementById("messagesList").appendChild(li);
                        });
                    })
                    .catch(err => console.error(err.toString()));
            }
        });

        document.getElementById("sendButton").addEventListener("click", () => {
            const user = localStorage.getItem('currentUser');
            const message = document.getElementById("messageInput").value;
            if (message) {
                connection.invoke("SendMessage", user, message).catch(err => console.error(err.toString()));
                document.getElementById("messageInput").value = '';
            }
        });
    </script>
</body>
</html>
